// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 16) * 1px;
	font-size: $sizeValue * 1rem;
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
	table-layout: fixed;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}

@mixin screen-reader-text {
  /* Text meant only for screen readers. */
  clip: rect(1px, 1px, 1px, 1px);
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;

  &:focus {
    background-color: $color__background-screen;
    border-radius: 3px;
    box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
    clip: auto !important;
    color: $color__text-screen;
    display: block;
    @include font-size(0.875);
    font-weight: bold;
    height: auto;
    left: 5px;
    line-height: normal;
    padding: 15px 23px 14px;
    text-decoration: none;
    top: 5px;
    width: auto;
    z-index: 100000; /* Above WP toolbar. */
  }
}

// Media Query Breakpoints

@mixin breakpoint($point) {
  $bp-giant:      "(min-width: 1900px)"; // large desktops
  $bp-huge:       "(min-width: 1600px)";
  $bp-large:      "(min-width: 1350px)";
  $bp-medium:     "(min-width: 1150px)";
  $bp-little:     "(min-width: 850px)";
  $bp-tiny:       "(min-width: 550px)";
  $bp-preTiny:    "(max-width: 550px)";
  $bp-mini:       "(min-width: 350px)";


  @if $point == giant {
    @media #{$bp-giant} { @content; }
  }
  @elseif $point == huge {
    @media #{$bp-huge} { @content; }
  }
  @else if $point == large {
    @media #{$bp-large} { @content; }
  }
  @else if $point == medium {
    @media #{$bp-medium}  { @content; }
  }
  @else if $point == little {
    @media #{$bp-little}  { @content; }
  }
  @else if $point == tiny {
    @media #{$bp-tiny}  { @content; }
  }
  @else if $point == preTiny {
    @media #{$bp-preTiny}  { @content; }
  }
  @else if $point == mini {
    @media #{$bp-mini}  { @content; }
  }
}
